WindowManager:
    LoginPage:
    RegisterPage:
    BookPage:
    HomePage:

<LoginPage>:
    name: 'login'

    user: user
    pass1: pass1

    FloatLayout:
        MDCard:
            size_hint: None, None
            size: 300, 400
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            elevation: 10
            padding: 25
            spacing: 25
            orientation: 'vertical'

            MDLabel:
                id: welcome_label
                text: 'WELCOME'
                font_size: 40
                halign: 'center'
                size_hint_y: None
                height: self.texture_size[1]
                padding_y: 15

            MDTextFieldRound:
                id: user
                hint_text: 'username'
                icon_right: 'account'
                size_hint_x: None
                width: 200
                font_size: 18
                multiline: False
                pos_hint: {"center_x":0.5}





            MDTextFieldRound:
                id: pass1
                hint_text: 'password'
                icon_right: 'eye-off'
                password: True
                size_hint_x: None
                width: 200
                font_size: 18
                multiline: False
                pos_hint: {"center_x":0.5}
                helper_text: 'Max length 40'
                helper_text_mode: 'on_error'
                max_text_length: 40


            MDRoundFlatButton:
                text: 'Login'
                font_size: 12
                pos_hint: {'center_x': 0.5}
                on_release:
                    val = root.btn_login()
                    app.root.current = 'home' if val else 'login'
                    if val: app.update_publication_grid()
                    app.update_recent_comments()
                    root.manager.transition.direction = 'left'

            MDRoundFlatButton:
                text: "Don't have an account? Register now."
                font_size: 12
                pos_hint: {'center_x': 0.5}
                on_release:
                    app.root.current = 'register'
                    root.manager.transition.direction = 'left'


<RegisterPage>:
    name: 'register'

    user: user
    pass1: pass1
    pass2: pass2

    FloatLayout:
        MDCard:
            size_hint: None, None
            size: 300, 400
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}
            elevation: 10
            padding: 25
            spacing: 25
            orientation: 'vertical'

            MDLabel:
                id: welcome_label
                text: 'REGISTER'
                font_size: 40
                halign: 'center'
                size_hint_y: None
                height: self.texture_size[1]
                padding_y: 15

            MDTextFieldRound:
                id: user
                hint_text: 'username'
                icon_right: 'account'
                size_hint_x: None
                width: 200
                font_size: 18
                multiline: False
                pos_hint: {"center_x":0.5}

            MDTextFieldRound:
                id: pass1
                hint_text: 'password'
                icon_right: 'eye-off'
                password: True
                size_hint_x: None
                width: 200
                font_size: 18
                multiline: False
                pos_hint: {"center_x":0.5}

            MDTextFieldRound:
                id: pass2
                hint_text: 'retype password'
                icon_right: 'eye-off'
                password: True
                size_hint_x: None
                width: 200
                font_size: 18
                multiline: False
                pos_hint: {"center_x":0.5}

            MDRoundFlatButton:
                text: 'Register'
                font_size: 12
                pos_hint: {'center_x': 0.5}
                on_release:
                    val = root.btn_register()
                    app.root.current = 'home' if val else 'register'
                    if val: \
                    app.update_publication_grid()
                    app.update_recent_comments()
                    root.manager.transition.direction = 'left'

            MDRoundFlatButton:
                text: "Back to login"
                font_size: 12
                pos_hint: {'center_x': 0.5}
                on_release:
                    app.root.current = 'login'
                    root.manager.transition.direction = 'right'

<BookPage>:
    name: 'book_info'
    MDBoxLayout:
        orientation: 'vertical'
        spacing: self.height / 30


        GridLayout:
            cols: 1

            MDToolbar:
                md_bg_color: (255/255, 139/255, 56/255, 255/255)
                FloatLayout:
                    MDIconButton:
                        icon: 'arrow-left-bold'
                        pos_hint: {"center": (-0.9, 0.5)}
                        theme_text_color: "Custom"
                        text_color: 0, 0, 0, 1
                        on_press:
                            app.root.current = 'home'
                            root.manager.transition.direction = 'right'
                    Image:
                        source: 'images/HomePage/logo.png'
                        size_hint_y: 0.8
                        pos_hint: {"center": (0, 0.5)}

            GridLayout:
                id: book_info
                cols: 2
                padding: 30

                Image:
                    source: 'images/Demo/Books/1984.png'
                    size_hint: None, None

                Label:
                    id: 'info'
                    color: (0, 0, 0, 1)
                    pos_hint: {'top': 0.9, 'x': -1}
                    text: "Title: 1984 \nAuthor: Ken Kesey \nGenre: Dystopian Fiction \nChapters: 23 \nPages: 328"

        Label:
            id: 'book_comments'
            color: (0, 0, 0, 1)
            text: "\nuser420: Quite an interesting story \n\nuser001: I wish there was more! Really enjoyed this. \n\nuser489: WTF."


<HomePage>:
    name: 'home'
    MDBoxLayout:
        orientation: 'vertical'
        spacing: self.height / 30

        MDToolbar:
            md_bg_color: (255/255, 139/255, 56/255, 255/255)
            FloatLayout:
                MDIconButton:
                    icon: 'book-plus-outline'
                    pos_hint: {"center": (-0.9, 0.5)}
                    theme_text_color: "Custom"
                    text_color: 159/255, 87/255, 35/255, 255/255
                Image:
                    source: 'images/HomePage/logo.png'
                    size_hint_y: 0.8
                    pos_hint: {"center": (0, 0.5)}


        MDBottomNavigation:
            panel_color: 255/255, 139/255, 56/255, 255/255
            MDBottomNavigationItem:
                name: 'home_page'
                text: 'Book Search'
                icon: 'book-search-outline'
                MDBoxLayout:
                    orientation: 'vertical'

                    MDTextField:
                        size_hint_x: 0.5
                        pos_hint: {"center_x": 0.5}
                        hint_text: 'Search for a book!'
                        icon_right: 'magnify'
                        helper_text: "Don't see your book? Search its name to add it!"
                        helper_text_mode: 'on_focus'
                        on_text:
                            app.update_publication_grid(self.text)

                    ScrollView:
                        do_scroll_x: False
                        do_scroll_y: True
                        GridLayout:
                            id: book_grid
                            cols: 2
                            spacing: 10
                            size_hint_y: None
                            size_hint_x: 1
                            height: self.minimum_height

            MDBottomNavigationItem:
                name: 'feed_page'
                text: 'Notifications'
                icon: 'bell'

                MDBoxLayout:
                    orientation: 'vertical'



# this is code for personal profile page
            MDBottomNavigationItem:
                name: 'profile_page'
                text: 'Profile'
                icon: 'account-circle'

                MDFloatLayout:

                    Image: # profile pic
                        source:'images/Demo/Profile/person1.png'
                        size_hint_y: 0.2
                        pos_hint: {"center_x": .2, "center_y": 0.9}

                    MDBoxLayout:
                        size_hint: 0.6, 0.2
                        pos_hint: {"center_x": .7, "center_y": 0.9}
                        orientation: 'vertical'

                        MDLabel: # username
                            halign: "center"
                            color: (0, 0, 0, 1)
                            font_style: 'H6'
                            text: "USER001"

                        MDLabel: # bio
                            halign: "center"
                            color: (0, 0, 0, 1)
                            text: "Insert an interesting bio here.\nOr quirky jokes."


                    BoxLayout: # container for 3 posts
                        orientation: 'vertical'
                        id: recent_posts

#                            MDBoxLayout:
#                                id: recent_post1
#                                d = 'images/Demo/Books/1984.png'
#                                c = "I hated this book"
#                                self.add_widget(format_comment_preview())
#                            MDBoxLayout:
#                                id: recent_post2
#                                d = 'images/Demo/Books/IHaveTheRightToDestroyMyself.png'
#                                c = "I loved this! Couldn't put it down."
#                                self.add_widget(format_comment_preview())
#                            MDBoxLayout:
#                                id: recent_post3
#                                d = 'images/Demo/Books/NoPlaceLikeHere.png'
#                                c = "What a wonderful book!"
#                                self.add_widget(format_comment_preview())
